/*
 * This source file was generated by the Gradle 'init' task
 */
package taller5;

public class App {
    
    public static void main(String[] args) {
        
        try {
            System.out.println(numero_aleatorio(0));
            System.out.println(simular_ventas());
            System.out.println(Calcular_empaque(100));
            System.out.println(Jugar_21(3));
            
        } 
        
        catch (Exception e) {
            // TODO: handle exception
        }
    }


    /*
    
        1.	Desarrolle un algoritmo e impleméntelo en Java que: le pida al usuario un número entero positivo 
        entre 1000 y 9999. En un ciclo genere números de manera aleatoria y cuente los intentos que hizo antes 
        de hallar el número exactamente.
        
    
    */ 
    
    public static int numero_aleatorio(int numero) {
        try {

        final int lim_inf = 1000; 
        final int lim_sup = 9999;
 
        Scanner scanner = new Scanner(System.in);
        System.out.print("Ingrese un número entero positivo entre 1000 y 9999: ");

        int numero_usuario = scanner.nextInt();

        if (numero_usuario < lim_inf || numero_usuario > lim_sup) {
            System.out.println("El número ingresado no está en el rango que se permite.");
            return -1; 
        }

        Random random = new Random();
        int intentos = 0;
        boolean encontrado = false;

    
        for (int alea = 0; !encontrado; alea ++) {
           
            for (int num = 0; num < 1; num ++) { 
                int numero_aleatorio = random.nextInt(lim_sup - lim_inf + 1) + lim_inf;
                intentos++;

                if (numero_aleatorio == numero_usuario) {
                    encontrado = true;
                }
            }
        }

        System.out.println("Se encontró el número exactamente en " + intentos + " intentos.");
        return numero_usuario; 
    
            
        } 
        
        catch (Exception e) {
            return -1; 
        }
    }
    
       




    /* 
     
        2.	Se requiere una función en java que simule las ventas de tres años para un almacén. Para cada año, deberá generar 
        un aleatorio para cada mes hasta completar los 12 meses. La función se llamará Simular_ventas, y debe retornar un String 
        al final que muestre las ventas de cada año, así:
        
            Año 1
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 1:  $##.###.###
            
            Año 2
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 2: $##.###.###
            
            Año 3
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###

            Total ventas Año 3: $##.###.###
            
            Investigue sobre la clase DecimalFormat para mostrar bien la salida. 
            import java.text.DecimalFormat;
            DecimalFormat form_pesos = new DecimalFormat("$#,###.00");

        
      
    */
    public static String simular_ventas() {
            try {
                final int año_entero = 12;
                Random random = new Random();
                DecimalFormat pesos = new DecimalFormat("$#,###.00");
                String resultado = "";
                double total_ventas_año = 0;
        
               
                    for (int año = 1; año <= 3; año++) {
                        resultado += "Año " + año + "\n";
                        
        
                        for (int mes = 1; mes <= año_entero; mes++) {
                          
                            double ventas_mes = 10000 + (random.nextDouble() * (10000000 - 1000));
                            total_ventas_año += ventas_mes;
        
                            resultado += "Ventas Mes " + mes + ": " + pesos.format(ventas_mes) + "\n";
                        }
        
                        resultado += "Total ventas Año " + año + ": " + pesos.format(total_ventas_año) + "\n\n";
                    }
              
        
                return resultado;
            }
                
            catch (Exception e) {
                return "Ocurrio un error inesperado"; 
            }
        }
        

        


    



    /*  
     
        3.	En una fábrica se tiene el siguiente patrón de empaque: En una estiba(o pallet) caben 16  cajas y en cada caja, 
        caben 30 bombillas. Desarrolle una función que se llame: Calcular_empaque que: reciba como argumento la cantidad de 
        bombillas que se deben empacar y a partir de allí: calcule cuántas cajas necesita, cuántas estibas o pallets necesita. 
        Luego escriba lo siguiente: 

        Para ### bombillas, se necesitan ## cajas y ## pallets. Se quedan ### bombillas sin empacar. Se empacará así:

        Pallet 1 --> Caja1, Caja2……,Caja16
        Pallet2 -->  Caja17, Caja18…..Caja 32
        .
        Pallet n -- > Caja m, caja m+1…..
        
        La función retornará un texto, con la información anterior. Pruebe la función llamándola desde el programa principal: solicite al usuario el número de bombillas e invoque la función para imprimir en el main, los resultados.



    */
 public static String Calcular_empaque(int bombillas) {
        try {

        int cajas_por_pallets = 16;
        int bombillas_por_caja = 30;
        int cajas_necesarias = bombillas / bombillas_por_caja;
        int pallets_necesarios = 0;
        int caja_actual = 1;
    
        if (bombillas % bombillas_por_caja != 0) {
            cajas_necesarias++;
        }
    
        String resultado = "Para " + bombillas + " bombillas, se necesitan " + cajas_necesarias + " cajas. \n";
    
      
        for (int inicio = 1; caja_actual <= cajas_necesarias; inicio++) {
            if (cajas_necesarias > 0) {
                pallets_necesarios ++;
                resultado += "Pallet " + inicio + " --> ";
                for (int inicio1 = 1; inicio1 <= cajas_por_pallets; inicio1 ++) {
                    if (caja_actual <= cajas_necesarias) {
                        resultado += "Caja " + caja_actual;
                        caja_actual++;
                        if (inicio1 < cajas_por_pallets && caja_actual <= cajas_necesarias) {
                            resultado += ", ";
                        }
                    }
                }
                resultado += "\n";
            }
        }
    
        int bombillas_sin_empacar = bombillas - (cajas_necesarias - 1) * bombillas_por_caja;
        if (bombillas_sin_empacar  > bombillas_por_caja) {
            bombillas_sin_empacar  = bombillas_por_caja;
        }
    
        resultado += "Se quedan " + bombillas_sin_empacar + " bombillas sin empacar.\n";
    
        return resultado;
    
            
        }
        
        catch (Exception e) {
            return "Ocurrio un error inesperado";
        }
    }



    

    /* 
    

        4.	En un juego, cada jugador tiene 3 intentos para sacar cartas de una baraja. Las cartas van numeradas entre 1 y 10. 
        Una función Jugar_21, deberá simular el juego para una cantidad de usuarios que enviará el usuario desde el main entre 1 y 6.

        Para cada uno de los jugadores, el programa le calculará 3 cartas al azar y al final imprimirá el juego para cada jugador basado en las siguientes reglas: 
        
        Si saca 21 exactos: juego perfecto
        Si saca más de 21: se pasó
        Si saca menos de 21: faltaron puntos

        La función deberá imprimir los puntos de cada jugador junto con la regla anterior, como muestra el ejemplo:

        Jugador X, puntos 21 -- > juego perfecto
        Jugador Y, puntos 26 -- > se pasó
        .
        .


    */
  public static int Jugar_21 (int num_cartas){
           
            try {
                Scanner scanner = new Scanner(System.in);
                int num_jugadores = 0;
                int puntos = 0;
                String resultado;
            
                for (;;) {
                    System.out.print("Ingrese la cantidad de jugadores (1-6): ");
                    num_jugadores = scanner.nextInt();
                    if (num_jugadores >= 1 && num_jugadores <= 6) {
                        break;
                    }
                    System.out.println("Por favor, ingrese un número válido entre 1 y 6.");
                }
            
                for (int inicial = 1; inicial <= num_jugadores; inicial++) {
            
                    for (int cartas = 0; cartas < 3; cartas++) {
                        puntos += (int) (Math.random() * 10) + 1;
                    }
                    if (puntos == 21) {
                        resultado = "juego perfecto";
                    } else if (puntos > 21) {
                        resultado = "se pasó";
                    } else if (puntos < 21) {
                        resultado = "faltaron puntos";
                    } else {
                        resultado = "no se determinó el resultado";
                    }
            
                    System.out.println("Jugador " + inicial + ", puntos " + puntos + " -- > " + resultado);
                }
            
            } catch (Exception e) {
                System.out.println("Ocurrió un error inesperado: " + e.getMessage());
            }
            return 0; 
        }
    }



}
